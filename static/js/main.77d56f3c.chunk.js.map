{"version":3,"sources":["assets/icon-dollar.svg","assets/icon-person.svg","BillInput/BillInput.js","Header/Header.js","TipAmountDisplayContainer/TipAmountDisplay/TipAmountDisplay.js","TipAmountDisplayContainer/TipAmountDisplayContainer.js","TipPercentageButtons/TipPercentageButton.js","TipPercentageButtons/TipPercentageInput.js","TipPercentageButtons/TipPercentageButtonsContainer.js","App.js","index.js"],"names":["BillInput","props","className","htmlFor","value","label","name","src","dollarBillIcon","peopleIcon","alt","type","id","placeholder","Header","TipAmountDisplay","individualCostIncludingTip","toFixed","individualTipAmount","TipAmountDisplayContainer","values","bill","percentTip","numberOfPeople","individualCostBeforeTip","TipPercentageButton","percentage","style","display","TipPercentageInput","custom","arrayOfTipInputComponents","TipPercentageButtonsContainer","map","component","index","initialValues","validationSchema","Yup","min","required","App","errors","touched","handleBlur","handleReset","order","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77d56f3c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-dollar.9f9be353.svg\";","export default __webpack_public_path__ + \"static/media/icon-person.65bfd204.svg\";","import React from \"react\";\nimport { Field, ErrorMessage} from \"formik\"\nimport \"./BillInput.css\"\nimport dollarBillIcon from \"../assets/icon-dollar.svg\"\nimport peopleIcon from \"../assets/icon-person.svg\"\n\n\nexport const BillInput = (props) => {\n\n    const displayIcon = () => {\n        if(props.label && props.label === \"Bill\") {\n            return dollarBillIcon\n        } else if(props.label && props.label === \"Number Of People\") {\n            return peopleIcon\n        } else {\n            return \"\"\n        }\n    }\n\n    return (\n    <div className=\"inputContainer\"> \n        <div className=\"labelContainer\"> \n            <label className=\"inputLabel\" htmlFor={props.value} > {props.label} </label>\n            <span className=\"inputSpan\" > <ErrorMessage name={props.name} /> </span>\n        </div>\n        <img className=\"icon\" src={displayIcon()} alt=\"dollarSign\"/>\n        <Field type=\"number\" name={props.name} id={props.name} placeholder=\"\" /> \n    </div>     \n    )}                ","import \"./Header.css\"\nconst Header = () => {\n    return ( <h1 className=\"header\"> SPLITTER </h1>)\n}\n\nexport default Header;","import \"./TipAmountDisplay.css\"\r\n\r\nconst TipAmountDisplay = (props) => {\r\n\r\n    const displayTipAmount = () => {\r\n        return props.individualCostIncludingTip > 0 ? props.individualCostIncludingTip.toFixed(2) : \"0.00\"\r\n    }\r\n\r\n    const displayTotalAmount = () => {\r\n        return props.individualTipAmount > 0 ? props.individualTipAmount.toFixed(2) : \"0.00\"\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"TipAmountContainer\"> \r\n                <div className=\"TipAmount\"> Tip Amount </div>\r\n                <div className=\"PerPerson\"> /person </div>  \r\n            </div>\r\n            <span className=\"span\"> $ {displayTipAmount()} </span> \r\n            <div className=\"TotalContainer\"> \r\n                <div className=\"TipAmount\"> Total </div>\r\n                <div className=\"PerPerson\"> /person </div>\r\n            </div>\r\n            <span className=\"TotalSpan\"> $ {displayTotalAmount()} </span> \r\n\r\n            <button className=\"resetButton\" type=\"reset\"> RESET </button> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default TipAmountDisplay","import TipAmountDisplay from \"./TipAmountDisplay/TipAmountDisplay\"\nimport \"./TipAmountDisplayContainer.css\"\n\n\nconst TipAmountDisplayContainer = (props) => {\n    const {bill, percentTip, numberOfPeople } = props.values\n\n    const individualCostBeforeTip = bill / numberOfPeople\n    const individualTipAmount = bill && percentTip && numberOfPeople ? individualCostBeforeTip * percentTip / 100 : 0\n    const individualCostIncludingTip = bill && percentTip && numberOfPeople ? individualTipAmount + individualCostBeforeTip : 0   \n\n    return (\n        <div className=\"tipAmountDisplayContainer\"> \n            <TipAmountDisplay individualCostIncludingTip={individualCostIncludingTip} individualTipAmount={individualTipAmount}/>\n        </div>\n    )\n}\n\nexport default TipAmountDisplayContainer","import { Field } from \"formik\"\nimport React from \"react\"\nimport \"./TipPercentageButton.css\"\n\nexport const TipPercentageButton = ({label, percentage}) => {\n  return (\n      <>\n          <label  htmlFor={percentage}>{percentage}% </label>\n          <Field style={{display: \"none\"}} type=\"radio\" name=\"percentTip\" id={percentage} value={percentage}/>\n      </>\n  )\n}","import { Field } from \"formik\"\nimport React from \"react\"\nimport \"./TipPercentageInput.css\"\n// import {ErrorMessage} from \"formik\"\n\nexport const TipPercentageInput = ({label, percentage, name}) => {\n    return (<> \n    <Field className=\"input\" type=\"text\" name=\"percentTip\" id={percentage} value={percentage.custom} placeholder=\"Custom\"/>\n    {/* <ErrorMessage name=\"percentTip\" /> */}\n    </>)\n}","\nimport { TipPercentageButton } from \"./TipPercentageButton\";\nimport { TipPercentageInput } from \"./TipPercentageInput\";\nimport \"./TipPercentageButtonsContainer.css\"\n\nconst percentage = {\n    five: 5,\n    ten: 10,\n    fifteen: 15,\n    twentyFive: 25,\n    fifty: 50,\n    custom: \"custom\"\n}\n\nconst arrayOfTipInputComponents = [<TipPercentageButton percentage={percentage.five}/>,\n    <TipPercentageButton percentage={percentage.ten} />,\n    <TipPercentageButton percentage={percentage.fifteen} />,\n    <TipPercentageButton percentage={percentage.twentyFive} />,\n    <TipPercentageButton percentage={percentage.fifty} />,     \n    <TipPercentageInput percentage={percentage.custom} />\n]\n\nconst displayTipPercentageButtons = () => {\n    return arrayOfTipInputComponents.map((component, index)=> {\n            return <div className=\"label\" key={index}>  {component} </div>\n        })\n    }\n\nexport const TipPercentageButtonsContainer = (props) => {\n    return (\n        <> \n            <h1 className=\"heading\"> Select Tip %</h1>\n            <div className=\"buttonsContainer\">{displayTipPercentageButtons()} </div>\n        </>\n    )\n}\n","import './App.css';\nimport { BillInput} from './BillInput/BillInput';\nimport * as Yup from \"yup\"\nimport {Formik, Form } from \"formik\"\nimport Header from \"./Header/Header\"\nimport TipAmountDisplayContainer from \"./TipAmountDisplayContainer/TipAmountDisplayContainer\"\nimport { TipPercentageButtonsContainer } from './TipPercentageButtons/TipPercentageButtonsContainer';\n\nlet initialValues = {\n  bill: \"\",\n  percentTip: \"\",\n  numberOfPeople: \"\",\n}\n\nconst validationSchema= Yup.object({\n  bill: Yup.number().min(1, \"Too Low\").required(\"Required\"),\n  percentTip: Yup.string().required(\"Required\"),\n  numberOfPeople: Yup.number().min(1, \"Too Low\").required(\"Required\")\n})\n\nfunction App(props) {\n\n  return (\n  <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n  \n  > \n  {({values, errors, touched, handleBlur, handleReset}) => ( //Ctrl + Space brings up options ie initialValues \n  \n  <Form> \n    <Header />         \n    <div className=\"container\"> \n        <div className=\"innerContainer\"> \n          <div  style={{order: \"1\"}}>  \n            <BillInput  touched={touched} errors={errors} value={values} name=\"bill\" label=\"Bill\" /> \n            <TipPercentageButtonsContainer touched={touched} errors={errors} />\n            <BillInput touched={touched} value={values} name=\"numberOfPeople\" label=\"Number Of People\"/> \n          </div>\n          <div style={{order: \"2\"}}> \n            <TipAmountDisplayContainer style={{order: \"4\"}}  values={values} />\n          </div>\n        </div>\n    </div>\n  </Form>\n  )}  \n                \n  </Formik>\n  )}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}